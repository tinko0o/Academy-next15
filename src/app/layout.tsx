import { ReactQueryProvider } from "@/react-query/provider";
import { ReduxProvider } from "@/redux/provider";

import type { Metadata } from "next";
import { Plus_Jakarta_Sans } from "next/font/google";
import { Toaster } from "sonner";
import "./globals.css";

const jakarta = Plus_Jakarta_Sans({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Grouple",
  description: "Generated by create next app",
  icons: {
    icon: {
      url: "/images/logo/logo.svg",
    },
  },
};
interface RootLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}
export default async function RootLayout({
  children,
}: Readonly<RootLayoutProps>) {
  // const { locale } = await params;
  // if (!routing.locales.includes(locale as any)) {
  //   notFound();
  // }

  // Providing all messages to the client

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${jakarta.className} dark:bg-gray-dark`}>
        <ReduxProvider>
          <ReactQueryProvider>{children}</ReactQueryProvider>
        </ReduxProvider>
        <Toaster />
      </body>
    </html>
  );
}
